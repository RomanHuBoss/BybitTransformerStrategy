import pandas as pd
import numpy as np
import joblib
from sklearn.preprocessing import StandardScaler
import logging
from config import CFG
from feature_engineering import FeatureEngineer
import os

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

logging.info("üöÄ –°—Ç–∞—Ä—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤...")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∞—Ç–∞—Å–µ—Ç
logging.info("–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ train_csv...")
df = pd.read_csv(CFG.paths.train_csv)
logging.info(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: {len(df)} —Å—Ç—Ä–æ–∫")

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
engineer = FeatureEngineer()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π master feature set
if os.path.exists(CFG.paths.feature_columns_path):
    logging.info("üìå –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π features.joblib ‚Äî –∑–∞–≥—Ä—É–∂–∞–µ–º master feature set.")
    master_features = joblib.load(CFG.paths.feature_columns_path)
    features = engineer.generate_features(df, fit=False)
    missing = set(master_features) - set(features.columns)
    if missing:
        raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {missing}")
    features = features[master_features]
else:
    logging.info("üìå –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ ‚Äî —Ñ–æ—Ä–º–∏—Ä—É–µ–º master feature set.")
    features = engineer.generate_features(df, fit=True)
    master_features = engineer.feature_columns
    joblib.dump(master_features, CFG.paths.feature_columns_path)
    logging.info(f"‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω master feature set: {len(master_features)} –ø—Ä–∏–∑–Ω–∞–∫–æ–≤")

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è
scaler = StandardScaler()
scaled_features = scaler.fit_transform(features[master_features])
joblib.dump(scaler, CFG.paths.scaler_path)
logging.info("‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω scaler")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏—á–∏
pd.DataFrame(scaled_features, columns=master_features).to_csv(CFG.paths.train_features_csv, index=False)
logging.info("‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω train_features.csv")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
assert scaled_features.shape[1] == len(master_features), "Feature size mismatch –ø–æ—Å–ª–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏"

logging.info("üéØ –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
