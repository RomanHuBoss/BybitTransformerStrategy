import asyncio
import logging
from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from contextlib import asynccontextmanager
from snapshot_inference import SnapshotInference
import os
from fastapi.responses import FileResponse

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º predictor –∑–∞—Ä–∞–Ω–µ–µ
snapshot_engine = SnapshotInference()

@asynccontextmanager
async def lifespan(app: FastAPI):
    asyncio.create_task(streaming_loop())
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–≤–æ–≥–æ –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞...")
    yield

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI —Å lifespan
app = FastAPI(lifespan=lifespan)

# CORS ‚Äî —Ä–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —Ñ—Ä–æ–Ω—Ç–∞
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–æ —Å—Ç–∞—Ç–∏–∫–∏
current_dir = os.path.dirname(os.path.abspath(__file__))
static_dir = os.path.join(current_dir, "static")

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏–∫—É –Ω–∞ /static
app.mount("/static", StaticFiles(directory=static_dir, html=True), name="static")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ—Ä–Ω—è: –æ—Ç–¥–∞—ë–º index.html –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ /
@app.get("/")
async def root():
    return FileResponse(os.path.join(static_dir, "index.html"))

# –û—Ç–¥–∞—á–∞ snapshot —Å –ª–∏–º–∏—Ç–æ–º
@app.get("/snapshot")
async def get_snapshot(limit: int = 300):
    items = list(snapshot_engine.snapshot.items())
    filtered = dict(items[:limit])
    return filtered

# –°—Ç—Ä–∏–º–∏–Ω–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ –≤ —Ñ–æ–Ω–µ
async def streaming_loop():
    while True:
        await snapshot_engine.update_snapshot()
        await asyncio.sleep(1)

# Healthcheck
@app.get("/health")
async def health_check():
    return {"status": "ok"}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    import uvicorn
    uvicorn.run("index:app", host="0.0.0.0", port=8000, reload=True)
