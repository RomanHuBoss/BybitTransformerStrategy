import subprocess
import time
import logging

logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

pipeline_steps = [
    "reset_data.py",
    "data_pipeline.py",
    "train_direction.py",
    "train_amplitude.py",
    "train_hit_order.py",
    "temperature_calibration.py"
]

def run_script(script_name):
    logging.info(f"üöÄ –ó–∞–ø—É—Å–∫ {script_name} ...")
    start_time = time.perf_counter()
    try:
        subprocess.run(["python", script_name], check=True)
        elapsed = time.perf_counter() - start_time
        logging.info(f"‚úÖ {script_name} –∑–∞–≤–µ—Ä—à—ë–Ω –∑–∞ {elapsed:.1f} —Å–µ–∫.")
    except subprocess.CalledProcessError as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ {script_name}: {e}")
        raise

if __name__ == "__main__":
    logging.info("üöÄ –°—Ç–∞—Ä—Ç –ø–æ–ª–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –∫–∞–ª–∏–±—Ä–æ–≤–∫–∏...")
    for step in pipeline_steps:
        run_script(step)
    logging.info("üéØ –ü–æ–ª–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–Ω-–ø–∞–π–ø–ª–∞–π–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!")
